<!DOCTYPE html>
<html lang="en">

<head>
  <link rel="apple-touch-icon" type="image/png" href="https://cpwebassets.codepen.io/assets/favicon/apple-touch-icon-5ae1a0698dcc2402e9712f7d01ed509a57814f994c660df9f7a952f3060705ee.png" />
  <meta name="apple-mobile-web-app-title" content="CodePen">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <link rel="mask-icon" type="image/x-icon" href="https://cpwebassets.codepen.io/assets/favicon/logo-pin-b4b4269c16397ad2f0f7a01bcdf513a1994f4c94b8af2f191c09eb0d601762b1.svg" color="#111" />
  <title>recipe</title>
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/1.0.1/tailwind.min.css'>
  <link rel='stylesheet' href='https://cdn.lineicons.com/1.0.1/LineIcons.min.css'>

  <style>
    body {
      display: flex;
      justify-content: flex-end;
    }

    main {
      width: 100%;
      max-width: 1024px;
      margin-right: 20px;
      flex: 1;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }



    .sort-container {
      position: relative;
      display: inline-block;
      margin-left: 160px;
      margin-right: 50px;
      /* padding: 10px; */
      /* background-color: #f1f1f1; */
      /* border-radius: 2px;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1); */
    }

    .sort-label {
      font-size: 16px;
      font-weight: bold;
      margin-bottom: 5px;
    }

    .sort-select {
      font-size: 14px;
      padding: 6px 10px;
      border-radius: 4px;
      border: 1px solid #ccc;
      background-color: #fff;
      outline: none;
    }

    .toggle-button {
      background-color: #f5f0f4;
      border: none;
      color: rgb(238, 41, 41);
      padding: 10px 20px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 4px 2px;
      cursor: pointer;
      transition-duration: 0.4s;
      border-radius: 30px;
    }

    .container {
      margin-left: 20px;
    }

    #card-3 {
      /* Additional CSS properties for the card */
    }

    .other-content {
      /* Additional CSS properties for the content adjacent to the left of the card */
    }

    .casing {
      padding: 50px;
      margin-top: 80px;
    }

    .toggle-button:hover {
      background-color: #fd8e8e;
    }

    .toggle-content {
      display: none;
    }

    .toggle-content.show {
      display: block;
    }
    .comment {
  margin-bottom: 10px;
  padding: 10px;
  background-color: #ffffff;
  border-radius: 5px;
}

.comment-text {
  margin: 0;
}
.comment-uploader {
  font-size: 12px;
  color: #888888;
  margin-top: 2px;
}

.delete-comment-button {
  background-color: #ff0000;
  color: #ffffff;
  right: 5px; /* Updated */
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
}

.delete-comment-button:hover {
  background-color: #cc0000;
}


    .comment-textbox {
      width: 100%;
      /* Set the width to 100% to match the parent element's width */
    }

    .comment-button {
      background-color: gray;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      font-weight: bold;
    }

    .comment-button:hover {
      background-color: darkgray;
      cursor: pointer;
    }

    .elegant-button {
      background-color: #007bff;
      color: white;
    }

    .elegant-button:hover {
      background-color: #0056b3;
    }
  </style>
  <title>
    User Home Page
  </title>
  <%- include('./partials/head.ejs') %>
</head>

<body translate="no">
  <%- include('./partials/header.ejs') %>
  <div class="w-full min-h-screen bg-gray-200 p-3 sm:p-6 md:p-12 casing">
    
    <!-- <main class="w-full lg:w-3/4 mx-auto flex flex-wrap content-start"> -->
    <main class="w-full lg:w-3/4 mx-auto flex flex-wrap content-start" style="margin-right: 0;">
      <!-- Inner grid -->
      <% if (posts.length === 0) { %>
        <div class="text-center py-8">
          <p class="text-gray-800 text-3xl font-bold">There are no recipes on the site that belong to the users you follow.</p>
          <img src="assets/img/no-posts-image.jpg" alt="No posts" class="mt-4 mx-auto" style="max-width: 200px;">
          <p class="text-gray-800 mt-4 text-xl">But hey! We have a lot of other great<a href="/explore" class="text-blue-500"> recipes !</a></p>
        </div>
      <% }else{ %>

      <% posts.forEach(function(post) { %>

      <div class="w-full p-1">

        <!-- Social-media-post-like card -->
        <div id="card-3" class="bg-gray-100 shadow-lg rounded overflow-hidden flex flex-wrap flex-col">
          <div class="container">
            <header class="p-3 flex items-center">
              <img src="nomima.jpg" alt="<%=post.uploader%>" class="rounded-full mr-2" width="80" style="border-radius: 50%;" />
              <div>
                <form action="/viewOtherProfile" method="post">
                  <button class="inline-block list-none text-sm font-semibold uploader" data-doc="<%= post.uploader %>" data-user="<%= currentUser._id %>">
                    <span class="hidden md:inline">
                      <%=post.uploader%>
                    </span>
                  </button>
                  <input type="hidden" name="email" value="<%= post.uploader %>">
                </form>
                <small class="text-light text-gray-600">
                  <%=post.createdAt%>
                </small>
              </div>
            </header>
            <h2>
              <%=post.name %>
            </h2>
            <div class="inline-block list-none text-sm text-white font-semibold">
              <div class="inline-block bg-blue-500 px-2 rounded-full"><span id="category-name">
                  <%=post.category%>
                </span></div>
              <div class="inline-block bg-green-400 px-2 rounded-full"> <span id="preparation-time">
                  <%=post.preparationTime%>
                </span> minutes preparation </div>
              <div class="inline-block bg-pink-500 px-2 rounded-full"><span id="amount-of-portions">
                  <%=post.dishes%>
                </span> portions </div>
            </div>
            <div id="recipe-details">
              <% if (post.image && post.image.data) { %>
                <img src="data:<%= post.image.contentType %>;base64,<%= post.image.data.toString('base64') %>" alt="Recipe Image" style="float: right; margin-right: 50px;margin-top: -70px; height: 200px; border: 1px solid #333; border-radius: 5px;">
              <% } else { %>
                <img src="download.png" alt="Recipe Image" id="recipe-image"
                style="float: right; margin-right: 50px;margin-top: -70px; height: 200px; border: 1px solid #333; border-radius: 5px;">
              <% } %>
              <button class="IngredientsList toggle-button" name="ingButton" data-doc="<%= post._id %>">Ingredients</button>
              <div id="ing-<%=post._id%>">
                <% post.ingredients.forEach(ingredient=>{%>
                <li class="post-element">
                  <%=ingredient%>
                </li>
                <% }) %>
              </div>
              <!-- </ul> -->
              <button class="InstructionsList toggle-button" name="insButton" data-doc="<%= post._id %>">Instructions</button>
              <div class="post-element" id="ins-<%=post._id%>" style="margin-right: 100px;">
                <%=post.instructions%>
              </div>

              <footer class="w-full border-t border-gray-200 mt-3">
                <ul class="list-none w-full flex text-center" role="navigation">

                  <%if (currentUser.email!==post.uploader){%>
                  <% if(currentUser.likedRecipes.includes(post._id)){ %>
                  <li class="inline-block w-1/3">
                    <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-gray-500 focus:outline-none focus:bg-gray-100 focus:text-gray-500 unlike" data-doc="<%= post._id %>" data-user="<%= currentUser._id %>">
                      <!-- <span class="hidden md:inline"><%=post.likes %> </span> -->
                      <span class="fas fa-heart"></span>
                      <span class="hidden md:inline">Unlike</span>
                    </button>
                  </li>
                  <% } else{%>
                  <li class="inline-block w-1/3">
                    <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-pink-600 focus:outline-none focus:bg-pink-100 focus:text-pink-600 like" data-doc="<%= post._id %>" data-user="<%= currentUser._id %>">
                      <span class="hidden md:inline">
                        <%=post.likes %>
                      </span>
                      <span class="lni-heart"></span>
                      <span class="hidden md:inline">Like</span>
                    </button>
                  </li>
                  <% } %>
                  <% if(!currentUser.savedRecipes.includes(post._id)){ %>
                  <li class="inline-block w-1/3">
                    <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-blue-500 focus:outline-none focus:bg-blue-100 focus:text-blue-500 save" data-doc="<%= post._id %>" data-user="<%= currentUser._id %>">
                      <span class="lni-bookmark"></span>
                      <span class="hidden md:inline">Save</span>
                    </button>
                  </li>
                  <% }else{ %>
                  <li class="inline-block w-1/3">
                    <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-blue-500 focus:outline-none focus:bg-blue-100 focus:text-blue-500 unsave" data-doc="<%= post._id %>" data-user="<%= currentUser._id %>">
                      <span class="fas fa-bookmark"></span>
                      <span class="hidden md:inline">Unsave</span>
                    </button>
                  </li>
                  <% } %>
                  <li class="inline-block w-1/3">
                    <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-blue-500 focus:outline-none focus:bg-blue-100 focus:text-blue-500 share" data-doc="<%= post._id %>" data-user="<%= currentUser._id %>">
                      <span class="lni-share-alt"></span>
                      <span class="hidden md:inline">Share</span>
                    </button>
                  </li>
                  <%}else{%>
                  <li class="inline-block w-1/3">
                    <div class="block w-full p-2 text-gray-700 focus:bg-pink-100 focus:text-pink-600">
                      <span class="hidden md:inline">
                        <%=post.likes %>
                      </span>
                      <span class="lni-heart"></span>
                      <span class="hidden md:inline">Likes</span>
                    </div>
                  </li>
                  <li class="inline-block w-1/3">
                    <form action="/editRecipe" method="post">
                      <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-blue-500 focus:outline-none focus:bg-blue-100 focus:text-blue-500 ">
                        <span class="lni-pencil"></span>
                        <span class="hidden md:inline">Edit</span>
                      </button>
                      <input type="hidden" name="postId" value="<%= post._id %>">
                    </form>
                  </li>
                  <li class="inline-block w-1/3">
                    <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-red-500 focus:outline-none focus:bg-red-100 focus:text-red-500 delete" data-doc="<%= post._id %>">
                      <span class="lni-trash"></span>
                      <span class="hidden md:inline">Delete</span>
                    </button>
                  </li>
                  <%}%>
                  <li class="inline-block w-1/3">
                    <button class="block w-full p-2 hover:bg-gray-200 text-gray-700 hover:text-indigo-600 focus:outline-none focus:bg-indigo-100 focus:text-indigo-600 comment-toggle" data-doc="<%= post._id %>">
                  <span class="lni-comment-reply"></span>
                  <span class="hidden md:inline">Comment</span>
                  </button>
                  </li>


                </ul>
              </footer>
            </div>
          </div>
        </div>
        <div id="comment-box-<%= post._id %>" class="toggle-content">
          <% comments.forEach(function(comment) {  %>
            <% if (post.comments.includes(comment._id)) { %>
              <div class="comment">
                <p class="comment-uploader">Uploader: <%= currentUser.email %></p>

                <p class="comment-text"><%= comment.text %></p>
                <% if (comment.uploader == currentUser._id) { %>
                  <form method="post" class="delete-comment-form">
                    <input type="hidden" name="commentId" value="<%= comment._id %>">
                    <button class="delete-comment-button" data-doc="<%= comment._id %>">Delete</button>
                  </form>
                <% } %>
              </div>
            <% } %>
          <% }) %>
          <form action="/comment" method="post" onsubmit="updateHiddenInputValue('<%= post._id %>')">
            <textarea id="comment-textbox<%=post._id%>" class="comment-textbox" rows="4" cols="50" placeholder="Enter your comment" data-doc="<%= post._id %>"></textarea>
            <button class="comment-button elegant-button" data-doc="<%= post._id %>">Submit</button>
            <input type="hidden" name="postId" value="<%= post._id %>">
            <input type="hidden" name="text" id="comment-textid<%=post._id%>" value="">
            <input type="hidden" name="uploader" value="<%= currentUser._id %>">
            <input type="hidden" name="poster"  value="<%=post.uploader%>">
          </form>
        </div>
                
        
            </div>

            <% }) %>
            <% } %>
              </main>
  </div>
  <script>
    function updateHiddenInputValue(postId) {
    var textbox = document.getElementById('comment-textbox' + postId);
    var hiddenInput = document.getElementById('comment-textid' + postId);
    hiddenInput.value = textbox.value;
  }
    const trashcans = document.querySelectorAll('button.delete');
    trashcans.forEach(trashcan => {
      trashcan.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/${trashcan.dataset.doc}`;
        fetch(endpoint, {
            method: 'DELETE',
          })
          .then(response => response.json())
          .then(data => window.location.href = data.redirect)
          .catch(err => console.log(err));
      });
    });


    const likeboxes = document.querySelectorAll('button.like');
    likeboxes.forEach(likebox => {
      likebox.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/like`;
        const data = {
          userId: likebox.dataset.user,
          postId: likebox.dataset.doc,
        };
        fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          })
          .then(response => response.json())
          .then(data => window.location.href = data.redirect)
          .catch(err => console.log(err));
      });
    });

    const unlikeboxes = document.querySelectorAll('button.unlike');
    unlikeboxes.forEach(unlikebox => {
      unlikebox.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/unlike`;
        const data = {
          userId: unlikebox.dataset.user,
          postId: unlikebox.dataset.doc,
        };
        fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          })
          .then(response => response.json())
          .then(data => window.location.href = data.redirect)
          .catch(err => console.log(err));
      });
    });


    const saveboxes = document.querySelectorAll('button.save');
    saveboxes.forEach(savebox => {
      savebox.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/save`;
        const data = {
          userId: savebox.dataset.user,
          postId: savebox.dataset.doc,
        };
        fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          })
          .then(response => response.json())
          .then(data => window.location.href = data.redirect)
          .catch(err => console.log(err));
      });
    });

    const unsaveboxes = document.querySelectorAll('button.unsave');
    unsaveboxes.forEach(unsavebox => {
      unsavebox.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/unsave`;
        const data = {
          userId: unsavebox.dataset.user,
          postId: unsavebox.dataset.doc,
        };
        fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          })
          .then(response => response.json())
          .then(data => window.location.href = data.redirect)
          .catch(err => console.log(err));
      });
    });

    const shareboxes = document.querySelectorAll('button.share');
    shareboxes.forEach(sharebox => {
      sharebox.addEventListener('click', (e) => {
        const endpoint = `/viewRecipe/share`;
        const data = {
          userId: sharebox.dataset.user,
          postId: sharebox.dataset.doc,
        };
        fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          })
          .then(response => response.json())
          .then(data => window.location.href = data.redirect)
          .catch(err => console.log(err));
      });
    });


    const ingbuttons = document.getElementsByName("ingButton");
    ingbuttons.forEach(button => {
      const doc = button.dataset.doc;
      const element1 = document.getElementById('ing-' + doc);
      if (element1) {
        element1.style.display = 'none';
      }
      const element2 = document.getElementById('ins-' + doc);
      if (element2) {
        element2.style.display = 'none';
      }
    });

    document.addEventListener('DOMContentLoaded', () => {
      const ingbuttons = document.getElementsByName("ingButton");
      const insbuttons = document.getElementsByName("insButton");
      const commentbuttons = document.getElementsByName("comment-button");

      ingbuttons.forEach(button => {
        button.addEventListener('click', handleClick);
      });
      commentbuttons.forEach(button => {
        button.addEventListener('click', chngeText);
      });
      insbuttons.forEach(button => {
        button.addEventListener('click', shandleClick);
      });
    });

    function handleClick(event) {
      const button = event.target;
      const doc = button.dataset.doc;
      console.log('Button clicked:', button, 'Data-doc:', doc);
      const element = document.getElementById('ing-' + doc);
      console.log('ing' + doc);
      if (element) {
        if (element.style.display === 'none') {
          element.style.display = 'block';
        } else {
          element.style.display = 'none';
        }
        // console.log("found it");
        // element.style.display = 'none';
      }
      // Perform further actions with the doc value
    }

    function shandleClick(event) {
      const button = event.target;
      const doc = button.dataset.doc;
      console.log('Button clicked:', button, 'Data-doc:', doc);
      const element = document.getElementById('ins-' + doc);
      console.log('ing' + doc);
      if (element) {
        if (element.style.display === 'none') {
          element.style.display = 'block';
        } else {
          element.style.display = 'none';
        }
        // console.log("found it");
        // element.style.display = 'none';
      }
      // Perform further actions with the doc value
    }

    const commentToggles = document.querySelectorAll('button.comment-toggle');
    commentToggles.forEach(commentToggle => {
      commentToggle.addEventListener('click', (e) => {
        const commentBox = document.querySelector(`#comment-box-${commentToggle.dataset.doc}`);
        commentBox.classList.toggle('show');
      });
    });
    function chngeText(event) {
      const button = event.target;
      const doc = button.dataset.doc;
      // console.log('Button clicked:', button, 'Data-doc:', doc);
      // const element = document.getElementById('ing-' + doc);
      // console.log('ing' + doc);
      var commentTextbox = event.target.parentNode.querySelector('.comment-textbox'+ doc);
        var commentText = commentTextbox.value;

        // Set the value of the corresponding comment text input
        var commentTextInput = event.target.parentNode.querySelector('.comment-text'+ doc);
        commentTextInput.value = commentText;

        // Submit the form
        event.target.parentNode.submit();
    }

    // const commentTextboxes = document.querySelectorAll('.comment-button')
    // commentTextboxes.forEach(commentTextbox => {
    //   commentTextbox.addEventListener('click', function() {
    //     var commentTextbox = document.getElementById('comment-textbox');
    //     var commentText = commentTextbox.value;
    //     document.getElementById('comment-text').value = commentText;
    //   });
    // });

  function updateHiddenInputValue(postId) {
    var textbox = document.getElementById('comment-textbox' + postId);
    var hiddenInput = document.getElementById('comment-textid' + postId);
    hiddenInput.value = textbox.value;
  }
  
  const deleteComment = (commentId) => {
    fetch(`/deleteComment?commentId=${commentId}`, {
      method: 'DELETE'
    })
      .then(response => {
        if (response.ok) {
          // Deletion successful
          console.log('Comment deleted successfully');
          // Perform any necessary UI updates
          location.reload(); // Refresh the page
        } else {
          // Handle deletion error
          console.error('Failed to delete comment');
          // Perform any necessary error handling or UI updates
        }
      })
      .catch(error => {
        // Handle network errors
        console.error(error);
      });
  };

  const deleteButtons = document.querySelectorAll('.delete-comment-button');
  deleteButtons.forEach(button => {
    button.addEventListener('click', (event) => {
      event.preventDefault();
      const commentId = button.dataset.doc;
      deleteComment(commentId);
    });
  });
  
  </script>

  

</body>

</html>